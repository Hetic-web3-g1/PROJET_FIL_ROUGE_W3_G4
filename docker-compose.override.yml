# Production build
version: '3.8'
services:
  backend-api:
    build:
      context: ./backend
      target: production
    restart: unless-stopped
    container_name: backend-api
    ports:
      - '4000:4000'
    networks: 
      - app-network
      - back-network
    depends_on:
      - db

  builder:
    build:
      context: ./frontend
      target: builder
    restart: no
    container_name: builder

  frontend-app:
    build:
      context: ./frontend
      target: production
    restart: unless-stopped
    container_name: frontend-app
    ports:
      - '80:80'
    networks: 
      - app-network
    depends_on:
      - builder

  db:
    container_name: db-postgres
    image: postgres:latest
    env_file:
      - ./backend/development.env
    restart: unless-stopped
    ports:
      - 5432:5432
    networks:
      - back-network

  s3:
    image: zenko/cloudserver
    container_name: s3
    ports:
      - "1235:8000"
    volumes:
      - ./s3-config/config.json:/usr/src/app/config.docker
      - ./s3-config/credentials:/root/.aws/credentials
      - s3-data:/usr/src/app/localData
      - s3-metadata:/usr/src/app/localMetadata
    environment:
      S3DATA: multiple
      REMOTE_MANAGEMENT_DISABLE: 1
      LISTEN_ADDR: 0.0.0.0
    env_file:
      - ./backend/development.env
    restart: unless-stopped
    command: /bin/sh -c "cp -R ./config.docker config.json && yarn start"
    networks:
      - back-network

networks:
  app-network:
  back-network:

# docker compose -f docker-compose.override.yml up -d --build