name: "Backend CI"

on:
  pull_request:
    branches:
      - "**"
    paths:
      - "backend/**"

jobs:
  backend-ci:
    name: "API Test and deployement"
    runs-on: ubuntu-latest
    container: python:3.11.4-slim

    env:
      POETRY_VERSION: 1.4.2

      POSTGRES_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    defaults:
      run:
        working-directory: backend

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: pip-cache
        with:
          path: .cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          apt-get update
          apt-get -y install libpq-dev gcc
          pip install poetry==${{ env.POETRY_VERSION }}
          poetry export --without-hashes --dev -f requirements.txt -o requirements.txt
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest ./src/tests
