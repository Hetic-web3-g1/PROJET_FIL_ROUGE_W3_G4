"""modify tag system

Revision ID: ecca29441e2f
Revises: 30c654563c3d
Create Date: 2023-07-26 09:53:50.703291

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "ecca29441e2f"
down_revision = "30c654563c3d"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("biography_tag_tag_id_fkey", "biography_tag", type_="foreignkey")
    op.drop_constraint(
        "biography_tag_biography_id_fkey", "biography_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("biography_tag_biography_id_fkey"),
        "biography_tag",
        "biography",
        ["biography_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("biography_tag_tag_id_fkey"),
        "biography_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "masterclass_tag_masterclass_id_fkey", "masterclass_tag", type_="foreignkey"
    )
    op.drop_constraint(
        "masterclass_tag_tag_id_fkey", "masterclass_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("masterclass_tag_masterclass_id_fkey"),
        "masterclass_tag",
        "masterclass",
        ["masterclass_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("masterclass_tag_tag_id_fkey"),
        "masterclass_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("partition_tag_tag_id_fkey", "partition_tag", type_="foreignkey")
    op.drop_constraint(
        "partition_tag_partition_id_fkey", "partition_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("partition_tag_tag_id_fkey"),
        "partition_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("partition_tag_partition_id_fkey"),
        "partition_tag",
        "partition",
        ["partition_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "subtitle_tag_subtitle_id_fkey", "subtitle_tag", type_="foreignkey"
    )
    op.drop_constraint("subtitle_tag_tag_id_fkey", "subtitle_tag", type_="foreignkey")
    op.create_foreign_key(
        op.f("subtitle_tag_tag_id_fkey"),
        "subtitle_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("subtitle_tag_subtitle_id_fkey"),
        "subtitle_tag",
        "subtitle",
        ["subtitle_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.add_column("tag", sa.Column("tag_type", sa.String(), nullable=False))
    op.drop_constraint("user_tag_user_id_fkey", "user_tag", type_="foreignkey")
    op.drop_constraint("user_tag_tag_id_fkey", "user_tag", type_="foreignkey")
    op.create_foreign_key(
        op.f("user_tag_tag_id_fkey"),
        "user_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("user_tag_user_id_fkey"),
        "user_tag",
        "user",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("video_tag_tag_id_fkey", "video_tag", type_="foreignkey")
    op.drop_constraint("video_tag_video_id_fkey", "video_tag", type_="foreignkey")
    op.create_foreign_key(
        op.f("video_tag_tag_id_fkey"),
        "video_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("video_tag_video_id_fkey"),
        "video_tag",
        "video",
        ["video_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "work_analysis_tag_tag_id_fkey", "work_analysis_tag", type_="foreignkey"
    )
    op.drop_constraint(
        "work_analysis_tag_work_analysis_id_fkey",
        "work_analysis_tag",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("work_analysis_tag_work_analysis_id_fkey"),
        "work_analysis_tag",
        "work_analysis",
        ["work_analysis_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("work_analysis_tag_tag_id_fkey"),
        "work_analysis_tag",
        "tag",
        ["tag_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("work_analysis_tag_tag_id_fkey"), "work_analysis_tag", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("work_analysis_tag_work_analysis_id_fkey"),
        "work_analysis_tag",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "work_analysis_tag_work_analysis_id_fkey",
        "work_analysis_tag",
        "work_analysis",
        ["work_analysis_id"],
        ["id"],
    )
    op.create_foreign_key(
        "work_analysis_tag_tag_id_fkey", "work_analysis_tag", "tag", ["tag_id"], ["id"]
    )
    op.drop_constraint(op.f("video_tag_video_id_fkey"), "video_tag", type_="foreignkey")
    op.drop_constraint(op.f("video_tag_tag_id_fkey"), "video_tag", type_="foreignkey")
    op.create_foreign_key(
        "video_tag_video_id_fkey", "video_tag", "video", ["video_id"], ["id"]
    )
    op.create_foreign_key(
        "video_tag_tag_id_fkey", "video_tag", "tag", ["tag_id"], ["id"]
    )
    op.drop_constraint(op.f("user_tag_user_id_fkey"), "user_tag", type_="foreignkey")
    op.drop_constraint(op.f("user_tag_tag_id_fkey"), "user_tag", type_="foreignkey")
    op.create_foreign_key("user_tag_tag_id_fkey", "user_tag", "tag", ["tag_id"], ["id"])
    op.create_foreign_key(
        "user_tag_user_id_fkey", "user_tag", "user", ["user_id"], ["id"]
    )
    op.drop_column("tag", "tag_type")
    op.drop_constraint(
        op.f("subtitle_tag_subtitle_id_fkey"), "subtitle_tag", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("subtitle_tag_tag_id_fkey"), "subtitle_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "subtitle_tag_tag_id_fkey", "subtitle_tag", "tag", ["tag_id"], ["id"]
    )
    op.create_foreign_key(
        "subtitle_tag_subtitle_id_fkey",
        "subtitle_tag",
        "subtitle",
        ["subtitle_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("partition_tag_partition_id_fkey"), "partition_tag", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("partition_tag_tag_id_fkey"), "partition_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "partition_tag_partition_id_fkey",
        "partition_tag",
        "partition",
        ["partition_id"],
        ["id"],
    )
    op.create_foreign_key(
        "partition_tag_tag_id_fkey", "partition_tag", "tag", ["tag_id"], ["id"]
    )
    op.drop_constraint(
        op.f("masterclass_tag_tag_id_fkey"), "masterclass_tag", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("masterclass_tag_masterclass_id_fkey"),
        "masterclass_tag",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "masterclass_tag_tag_id_fkey", "masterclass_tag", "tag", ["tag_id"], ["id"]
    )
    op.create_foreign_key(
        "masterclass_tag_masterclass_id_fkey",
        "masterclass_tag",
        "masterclass",
        ["masterclass_id"],
        ["id"],
    )
    op.drop_constraint(
        op.f("biography_tag_tag_id_fkey"), "biography_tag", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("biography_tag_biography_id_fkey"), "biography_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "biography_tag_biography_id_fkey",
        "biography_tag",
        "biography",
        ["biography_id"],
        ["id"],
    )
    op.create_foreign_key(
        "biography_tag_tag_id_fkey", "biography_tag", "tag", ["tag_id"], ["id"]
    )
    # ### end Alembic commands ###
