"""Initial Migration

Revision ID: 487ee82441c4
Revises: 
Create Date: 2023-07-25 21:24:30.508592

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '487ee82441c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    op.execute("CREATE SCHEMA IF NOT EXISTS logging")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academy',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('academy_pkey')),
    sa.UniqueConstraint('id', name=op.f('academy_id_key'))
    )
    op.create_table('log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('log_pkey')),
    sa.UniqueConstraint('id', name=op.f('log_id_key')),
    schema='logging'
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('tag_pkey')),
    sa.UniqueConstraint('id', name=op.f('tag_id_key'))
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.LargeBinary(), nullable=True),
    sa.Column('salt', sa.LargeBinary(), nullable=True),
    sa.Column('primary_role', sa.String(), nullable=False),
    sa.Column('secondary_role', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('academy_id', sa.UUID(), nullable=False),
    sa.Column('image_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['academy_id'], ['academy.id'], name=op.f('user_academy_id_fkey')),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('user_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('user_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('email', name=op.f('user_email_key')),
    sa.UniqueConstraint('id', name=op.f('user_id_key'))
    )
    op.create_table('annotation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('measure', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('annotation_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('annotation_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('annotation_pkey')),
    sa.UniqueConstraint('id', name=op.f('annotation_id_key'))
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('comment_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('comment_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('comment_pkey')),
    sa.UniqueConstraint('id', name=op.f('comment_id_key'))
    )
    op.create_table('reset_token',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('hash', sa.LargeBinary(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('reset_token_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('reset_token_pkey')),
    sa.UniqueConstraint('id', name=op.f('reset_token_id_key'))
    )
    op.create_table('s3_object',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('object_key', sa.String(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('bucket', sa.String(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('major_type', sa.String(), nullable=False),
    sa.Column('minor_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('s3_object_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('s3_object_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('s3_object_pkey'))
    )
    op.create_table('user_tag',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('user_tag_tag_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('user_tag_user_id_fkey'))
    )
    op.create_table('work_analysis',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('about', sa.Text(), nullable=True),
    sa.Column('learning', sa.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('work_analysis_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('work_analysis_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('work_analysis_pkey')),
    sa.UniqueConstraint('id', name=op.f('work_analysis_id_key'))
    )
    op.create_table('image',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('s3_object_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('image_created_by_fkey')),
    sa.ForeignKeyConstraint(['s3_object_id'], ['s3_object.id'], name=op.f('image_s3_object_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('image_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('image_pkey')),
    sa.UniqueConstraint('id', name=op.f('image_id_key'))
    )
    op.create_table('partition',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('s3_object_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('partition_created_by_fkey')),
    sa.ForeignKeyConstraint(['s3_object_id'], ['s3_object.id'], name=op.f('partition_s3_object_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('partition_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('partition_pkey')),
    sa.UniqueConstraint('id', name=op.f('partition_id_key'))
    )
    op.create_table('video',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('version', sa.Float(), nullable=False),
    sa.Column('s3_object_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('video_created_by_fkey')),
    sa.ForeignKeyConstraint(['s3_object_id'], ['s3_object.id'], name=op.f('video_s3_object_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('video_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('video_pkey')),
    sa.UniqueConstraint('id', name=op.f('video_id_key'))
    )
    op.create_table('work_analysis_comment',
    sa.Column('work_analysis_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('work_analysis_comment_comment_id_fkey')),
    sa.ForeignKeyConstraint(['work_analysis_id'], ['work_analysis.id'], name=op.f('work_analysis_comment_work_analysis_id_fkey'))
    )
    op.create_table('work_analysis_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('work_analysis_id', sa.UUID(), nullable=False),
    sa.Column('meta_key', sa.String(), nullable=False),
    sa.Column('meta_value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['work_analysis_id'], ['work_analysis.id'], name=op.f('work_analysis_meta_work_analysis_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('work_analysis_meta_pkey')),
    sa.UniqueConstraint('id', name=op.f('work_analysis_meta_id_key'))
    )
    op.create_table('work_analysis_tag',
    sa.Column('work_analysis_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('work_analysis_tag_tag_id_fkey')),
    sa.ForeignKeyConstraint(['work_analysis_id'], ['work_analysis.id'], name=op.f('work_analysis_tag_work_analysis_id_fkey'))
    )
    op.create_table('work_analysis_translation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('work_analysis_id', sa.UUID(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('about', sa.Text(), nullable=True),
    sa.Column('learning', sa.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('work_analysis_translation_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('work_analysis_translation_updated_by_fkey')),
    sa.ForeignKeyConstraint(['work_analysis_id'], ['work_analysis.id'], name=op.f('work_analysis_translation_work_analysis_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('work_analysis_translation_pkey')),
    sa.UniqueConstraint('id', name=op.f('work_analysis_translation_id_key'))
    )
    op.create_table('biography',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('instrument', sa.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('award', sa.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('image_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('biography_created_by_fkey')),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], name=op.f('biography_image_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('biography_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('biography_pkey')),
    sa.UniqueConstraint('id', name=op.f('biography_id_key'))
    )
    op.create_table('image_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.UUID(), nullable=False),
    sa.Column('meta_key', sa.String(), nullable=False),
    sa.Column('meta_value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], name=op.f('image_meta_image_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('image_meta_pkey')),
    sa.UniqueConstraint('id', name=op.f('image_meta_id_key'))
    )
    op.create_table('partition_annotation',
    sa.Column('partition_id', sa.UUID(), nullable=False),
    sa.Column('annotation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['annotation_id'], ['annotation.id'], name=op.f('partition_annotation_annotation_id_fkey')),
    sa.ForeignKeyConstraint(['partition_id'], ['partition.id'], name=op.f('partition_annotation_partition_id_fkey'))
    )
    op.create_table('partition_comment',
    sa.Column('partition_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('partition_comment_comment_id_fkey')),
    sa.ForeignKeyConstraint(['partition_id'], ['partition.id'], name=op.f('partition_comment_partition_id_fkey'))
    )
    op.create_table('partition_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('partition_id', sa.UUID(), nullable=False),
    sa.Column('meta_key', sa.String(), nullable=False),
    sa.Column('meta_value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['partition_id'], ['partition.id'], name=op.f('partition_meta_partition_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('partition_meta_pkey')),
    sa.UniqueConstraint('id', name=op.f('partition_meta_id_key'))
    )
    op.create_table('partition_tag',
    sa.Column('partition_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['partition_id'], ['partition.id'], name=op.f('partition_tag_partition_id_fkey')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('partition_tag_tag_id_fkey'))
    )
    op.create_table('subtitle',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.Column('s3_object_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('subtitle_created_by_fkey')),
    sa.ForeignKeyConstraint(['s3_object_id'], ['s3_object.id'], name=op.f('subtitle_s3_object_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('subtitle_updated_by_fkey')),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], name=op.f('subtitle_video_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('subtitle_pkey')),
    sa.UniqueConstraint('id', name=op.f('subtitle_id_key'))
    )
    op.create_table('timecode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.Column('hour', sa.Integer(), nullable=True),
    sa.Column('minute', sa.Integer(), nullable=True),
    sa.Column('second', sa.Integer(), nullable=True),
    sa.Column('frame', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], name=op.f('timecode_video_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('timecode_pkey')),
    sa.UniqueConstraint('id', name=op.f('timecode_id_key'))
    )
    op.create_table('video_comment',
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('video_comment_comment_id_fkey')),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], name=op.f('video_comment_video_id_fkey'))
    )
    op.create_table('video_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.Column('meta_key', sa.String(), nullable=False),
    sa.Column('meta_value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], name=op.f('video_meta_video_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('video_meta_pkey')),
    sa.UniqueConstraint('id', name=op.f('video_meta_id_key'))
    )
    op.create_table('video_tag',
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('video_tag_tag_id_fkey')),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], name=op.f('video_tag_video_id_fkey'))
    )
    op.create_table('biography_comment',
    sa.Column('biography_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['biography_id'], ['biography.id'], name=op.f('biography_comment_biography_id_fkey')),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('biography_comment_comment_id_fkey'))
    )
    op.create_table('biography_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('biography_id', sa.UUID(), nullable=False),
    sa.Column('meta_key', sa.String(), nullable=False),
    sa.Column('meta_value', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['biography_id'], ['biography.id'], name=op.f('biography_meta_biography_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('biography_meta_pkey')),
    sa.UniqueConstraint('id', name=op.f('biography_meta_id_key'))
    )
    op.create_table('biography_tag',
    sa.Column('biography_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['biography_id'], ['biography.id'], name=op.f('biography_tag_biography_id_fkey')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('biography_tag_tag_id_fkey'))
    )
    op.create_table('biography_translation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('biography_id', sa.UUID(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('award', sa.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['biography_id'], ['biography.id'], name=op.f('biography_translation_biography_id_fkey')),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('biography_translation_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('biography_translation_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('biography_translation_pkey')),
    sa.UniqueConstraint('id', name=op.f('biography_translation_id_key'))
    )
    op.create_table('masterclass',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('academy_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('teacher_bio_id', sa.UUID(), nullable=True),
    sa.Column('composer_bio_id', sa.UUID(), nullable=True),
    sa.Column('work_analysis_id', sa.UUID(), nullable=True),
    sa.Column('partition_id', sa.UUID(), nullable=True),
    sa.Column('instrument', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['academy_id'], ['academy.id'], name=op.f('masterclass_academy_id_fkey')),
    sa.ForeignKeyConstraint(['composer_bio_id'], ['biography.id'], name=op.f('masterclass_composer_bio_id_fkey')),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('masterclass_created_by_fkey')),
    sa.ForeignKeyConstraint(['partition_id'], ['partition.id'], name=op.f('masterclass_partition_id_fkey')),
    sa.ForeignKeyConstraint(['teacher_bio_id'], ['biography.id'], name=op.f('masterclass_teacher_bio_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('masterclass_updated_by_fkey')),
    sa.ForeignKeyConstraint(['work_analysis_id'], ['work_analysis.id'], name=op.f('masterclass_work_analysis_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('masterclass_pkey')),
    sa.UniqueConstraint('id', name=op.f('masterclass_id_key'))
    )
    op.create_table('subtitle_comment',
    sa.Column('subtitle_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('subtitle_comment_comment_id_fkey')),
    sa.ForeignKeyConstraint(['subtitle_id'], ['subtitle.id'], name=op.f('subtitle_comment_subtitle_id_fkey'))
    )
    op.create_table('subtitle_tag',
    sa.Column('subtitle_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['subtitle_id'], ['subtitle.id'], name=op.f('subtitle_tag_subtitle_id_fkey')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('subtitle_tag_tag_id_fkey'))
    )
    op.create_table('masterclass_comment',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('masterclass_comment_comment_id_fkey')),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], name=op.f('masterclass_comment_masterclass_id_fkey'))
    )
    op.create_table('masterclass_image',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('image_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], name=op.f('masterclass_image_image_id_fkey')),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], name=op.f('masterclass_image_masterclass_id_fkey'))
    )
    op.create_table('masterclass_tag',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], name=op.f('masterclass_tag_masterclass_id_fkey')),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('masterclass_tag_tag_id_fkey'))
    )
    op.create_table('masterclass_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('masterclass_role', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], name=op.f('masterclass_user_masterclass_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('masterclass_user_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('masterclass_user_pkey')),
    sa.UniqueConstraint('id', name=op.f('masterclass_user_id_key'))
    )
    op.create_table('masterclass_video',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], name=op.f('masterclass_video_masterclass_id_fkey')),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], name=op.f('masterclass_video_video_id_fkey'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('masterclass_video')
    op.drop_table('masterclass_user')
    op.drop_table('masterclass_tag')
    op.drop_table('masterclass_image')
    op.drop_table('masterclass_comment')
    op.drop_table('subtitle_tag')
    op.drop_table('subtitle_comment')
    op.drop_table('masterclass')
    op.drop_table('biography_translation')
    op.drop_table('biography_tag')
    op.drop_table('biography_meta')
    op.drop_table('biography_comment')
    op.drop_table('video_tag')
    op.drop_table('video_meta')
    op.drop_table('video_comment')
    op.drop_table('timecode')
    op.drop_table('subtitle')
    op.drop_table('partition_tag')
    op.drop_table('partition_meta')
    op.drop_table('partition_comment')
    op.drop_table('partition_annotation')
    op.drop_table('image_meta')
    op.drop_table('biography')
    op.drop_table('work_analysis_translation')
    op.drop_table('work_analysis_tag')
    op.drop_table('work_analysis_meta')
    op.drop_table('work_analysis_comment')
    op.drop_table('video')
    op.drop_table('partition')
    op.drop_table('image')
    op.drop_table('work_analysis')
    op.drop_table('user_tag')
    op.drop_table('s3_object')
    op.drop_table('reset_token')
    op.drop_table('comment')
    op.drop_table('annotation')
    op.drop_table('user')
    op.drop_table('tag')
    op.drop_table('log', schema='logging')
    op.drop_table('academy')
    # ### end Alembic commands ###
