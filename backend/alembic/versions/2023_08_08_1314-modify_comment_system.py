"""modify_comment_system

Revision ID: d0a638293e09
Revises: c96c3c26c7d1
Create Date: 2023-08-08 13:14:13.410671

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d0a638293e09"
down_revision = "c96c3c26c7d1"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "biography_comment", sa.Column("entity_id", sa.UUID(), nullable=False)
    )
    op.drop_constraint(
        "biography_comment_biography_id_fkey", "biography_comment", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("biography_comment_entity_id_fkey"),
        "biography_comment",
        "biography",
        ["entity_id"],
        ["id"],
    )
    op.drop_column("biography_comment", "biography_id")
    op.add_column(
        "masterclass_comment", sa.Column("entity_id", sa.UUID(), nullable=False)
    )
    op.drop_constraint(
        "masterclass_comment_masterclass_id_fkey",
        "masterclass_comment",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("masterclass_comment_entity_id_fkey"),
        "masterclass_comment",
        "masterclass",
        ["entity_id"],
        ["id"],
    )
    op.drop_column("masterclass_comment", "masterclass_id")
    op.add_column(
        "partition_comment", sa.Column("entity_id", sa.UUID(), nullable=False)
    )
    op.drop_constraint(
        "partition_comment_partition_id_fkey", "partition_comment", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("partition_comment_entity_id_fkey"),
        "partition_comment",
        "partition",
        ["entity_id"],
        ["id"],
    )
    op.drop_column("partition_comment", "partition_id")
    op.add_column("subtitle_comment", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint(
        "subtitle_comment_subtitle_id_fkey", "subtitle_comment", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("subtitle_comment_entity_id_fkey"),
        "subtitle_comment",
        "subtitle",
        ["entity_id"],
        ["id"],
    )
    op.drop_column("subtitle_comment", "subtitle_id")
    op.add_column("video_comment", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint(
        "video_comment_video_id_fkey", "video_comment", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("video_comment_entity_id_fkey"),
        "video_comment",
        "video",
        ["entity_id"],
        ["id"],
    )
    op.drop_column("video_comment", "video_id")
    op.add_column(
        "work_analysis_comment", sa.Column("entity_id", sa.UUID(), nullable=False)
    )
    op.drop_constraint(
        "work_analysis_comment_work_analysis_id_fkey",
        "work_analysis_comment",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("work_analysis_comment_entity_id_fkey"),
        "work_analysis_comment",
        "work_analysis",
        ["entity_id"],
        ["id"],
    )
    op.drop_column("work_analysis_comment", "work_analysis_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "work_analysis_comment",
        sa.Column("work_analysis_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("work_analysis_comment_entity_id_fkey"),
        "work_analysis_comment",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "work_analysis_comment_work_analysis_id_fkey",
        "work_analysis_comment",
        "work_analysis",
        ["work_analysis_id"],
        ["id"],
    )
    op.drop_column("work_analysis_comment", "entity_id")
    op.add_column(
        "video_comment",
        sa.Column("video_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("video_comment_entity_id_fkey"), "video_comment", type_="foreignkey"
    )
    op.create_foreign_key(
        "video_comment_video_id_fkey", "video_comment", "video", ["video_id"], ["id"]
    )
    op.drop_column("video_comment", "entity_id")
    op.add_column(
        "subtitle_comment",
        sa.Column("subtitle_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("subtitle_comment_entity_id_fkey"), "subtitle_comment", type_="foreignkey"
    )
    op.create_foreign_key(
        "subtitle_comment_subtitle_id_fkey",
        "subtitle_comment",
        "subtitle",
        ["subtitle_id"],
        ["id"],
    )
    op.drop_column("subtitle_comment", "entity_id")
    op.add_column(
        "partition_comment",
        sa.Column("partition_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("partition_comment_entity_id_fkey"),
        "partition_comment",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "partition_comment_partition_id_fkey",
        "partition_comment",
        "partition",
        ["partition_id"],
        ["id"],
    )
    op.drop_column("partition_comment", "entity_id")
    op.add_column(
        "masterclass_comment",
        sa.Column("masterclass_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("masterclass_comment_entity_id_fkey"),
        "masterclass_comment",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "masterclass_comment_masterclass_id_fkey",
        "masterclass_comment",
        "masterclass",
        ["masterclass_id"],
        ["id"],
    )
    op.drop_column("masterclass_comment", "entity_id")
    op.add_column(
        "biography_comment",
        sa.Column("biography_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("biography_comment_entity_id_fkey"),
        "biography_comment",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "biography_comment_biography_id_fkey",
        "biography_comment",
        "biography",
        ["biography_id"],
        ["id"],
    )
    op.drop_column("biography_comment", "entity_id")
    # ### end Alembic commands ###
