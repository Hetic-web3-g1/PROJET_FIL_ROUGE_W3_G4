"""update name table, add title to work analysis and simplify tag link table

Revision ID: c96c3c26c7d1
Revises: ecca29441e2f
Create Date: 2023-07-31 10:28:14.266795

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "c96c3c26c7d1"
down_revision = "ecca29441e2f"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("academy", sa.Column("updated_by", sa.UUID(), nullable=True))
    op.create_foreign_key(
        op.f("academy_updated_by_fkey"), "academy", "user", ["updated_by"], ["id"]
    )
    op.add_column("biography_tag", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint(
        "biography_tag_biography_id_fkey", "biography_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("biography_tag_entity_id_fkey"),
        "biography_tag",
        "biography",
        ["entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("biography_tag", "biography_id")
    op.add_column("image", sa.Column("filename", sa.String(), nullable=False))
    op.drop_column("image", "name")
    op.add_column("masterclass_tag", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint(
        "masterclass_tag_masterclass_id_fkey", "masterclass_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("masterclass_tag_entity_id_fkey"),
        "masterclass_tag",
        "masterclass",
        ["entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("masterclass_tag", "masterclass_id")
    op.add_column("partition", sa.Column("filename", sa.String(), nullable=False))
    op.drop_column("partition", "name")
    op.add_column("partition_tag", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint(
        "partition_tag_partition_id_fkey", "partition_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("partition_tag_entity_id_fkey"),
        "partition_tag",
        "partition",
        ["entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("partition_tag", "partition_id")
    op.add_column("subtitle", sa.Column("filename", sa.String(), nullable=False))
    op.drop_column("subtitle", "name")
    op.add_column("subtitle_tag", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint(
        "subtitle_tag_subtitle_id_fkey", "subtitle_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("subtitle_tag_entity_id_fkey"),
        "subtitle_tag",
        "subtitle",
        ["entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("subtitle_tag", "subtitle_id")
    op.add_column("user_tag", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint("user_tag_user_id_fkey", "user_tag", type_="foreignkey")
    op.create_foreign_key(
        op.f("user_tag_entity_id_fkey"),
        "user_tag",
        "user",
        ["entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("user_tag", "user_id")
    op.add_column("video", sa.Column("filename", sa.String(), nullable=False))
    op.drop_column("video", "name")
    op.add_column("video_tag", sa.Column("entity_id", sa.UUID(), nullable=False))
    op.drop_constraint("video_tag_video_id_fkey", "video_tag", type_="foreignkey")
    op.create_foreign_key(
        op.f("video_tag_entity_id_fkey"),
        "video_tag",
        "video",
        ["entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("video_tag", "video_id")
    op.add_column("work_analysis", sa.Column("title", sa.String(), nullable=False))
    op.add_column(
        "work_analysis_tag", sa.Column("entity_id", sa.UUID(), nullable=False)
    )
    op.drop_constraint(
        "work_analysis_tag_work_analysis_id_fkey",
        "work_analysis_tag",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("work_analysis_tag_entity_id_fkey"),
        "work_analysis_tag",
        "work_analysis",
        ["entity_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("work_analysis_tag", "work_analysis_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "work_analysis_tag",
        sa.Column("work_analysis_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("work_analysis_tag_entity_id_fkey"),
        "work_analysis_tag",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "work_analysis_tag_work_analysis_id_fkey",
        "work_analysis_tag",
        "work_analysis",
        ["work_analysis_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("work_analysis_tag", "entity_id")
    op.drop_column("work_analysis", "title")
    op.add_column(
        "video_tag",
        sa.Column("video_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("video_tag_entity_id_fkey"), "video_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "video_tag_video_id_fkey",
        "video_tag",
        "video",
        ["video_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("video_tag", "entity_id")
    op.add_column(
        "video", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_column("video", "filename")
    op.add_column(
        "user_tag", sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(op.f("user_tag_entity_id_fkey"), "user_tag", type_="foreignkey")
    op.create_foreign_key(
        "user_tag_user_id_fkey",
        "user_tag",
        "user",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("user_tag", "entity_id")
    op.add_column(
        "subtitle_tag",
        sa.Column("subtitle_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("subtitle_tag_entity_id_fkey"), "subtitle_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "subtitle_tag_subtitle_id_fkey",
        "subtitle_tag",
        "subtitle",
        ["subtitle_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("subtitle_tag", "entity_id")
    op.add_column(
        "subtitle", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_column("subtitle", "filename")
    op.add_column(
        "partition_tag",
        sa.Column("partition_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("partition_tag_entity_id_fkey"), "partition_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "partition_tag_partition_id_fkey",
        "partition_tag",
        "partition",
        ["partition_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("partition_tag", "entity_id")
    op.add_column(
        "partition",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_column("partition", "filename")
    op.add_column(
        "masterclass_tag",
        sa.Column("masterclass_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("masterclass_tag_entity_id_fkey"), "masterclass_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "masterclass_tag_masterclass_id_fkey",
        "masterclass_tag",
        "masterclass",
        ["masterclass_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("masterclass_tag", "entity_id")
    op.add_column(
        "image", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_column("image", "filename")
    op.add_column(
        "biography_tag",
        sa.Column("biography_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        op.f("biography_tag_entity_id_fkey"), "biography_tag", type_="foreignkey"
    )
    op.create_foreign_key(
        "biography_tag_biography_id_fkey",
        "biography_tag",
        "biography",
        ["biography_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("biography_tag", "entity_id")
    op.drop_constraint(op.f("academy_updated_by_fkey"), "academy", type_="foreignkey")
    op.drop_column("academy", "updated_by")
    # ### end Alembic commands ###
