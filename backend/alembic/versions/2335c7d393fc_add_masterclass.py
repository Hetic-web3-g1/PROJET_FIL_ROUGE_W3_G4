"""add masterclass
Revision ID: 2335c7d393fc
Revises: 7e4c25ad6a92
Create Date: 2023-07-10 14:16:59.504222
"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2335c7d393fc'
down_revision = '7e4c25ad6a92'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('masterclass',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('academy_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('teacher_bio_id', sa.UUID(), nullable=True),
    sa.Column('composer_bio_id', sa.UUID(), nullable=True),
    sa.Column('work_analysis_id', sa.UUID(), nullable=True),
    sa.Column('partition_id', sa.UUID(), nullable=True),
    sa.Column('instrument', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['academy_id'], ['academy.id'], ),
    sa.ForeignKeyConstraint(['composer_bio_id'], ['biography.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['partition_id'], ['partition.id'], ),
    sa.ForeignKeyConstraint(['teacher_bio_id'], ['biography.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['work_analysis_id'], ['work_analysis.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('masterclass_comment',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], )
    )
    op.create_table('masterclass_image',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('image_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], ),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], )
    )
    op.create_table('masterclass_tag',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('masterclass_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('masterclass_video',
    sa.Column('masterclass_id', sa.UUID(), nullable=False),
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['masterclass_id'], ['masterclass.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], )
    )
    op.create_unique_constraint(None, 'annotation', ['id'])
    op.create_unique_constraint(None, 'biography', ['id'])
    op.create_unique_constraint(None, 'biography_meta', ['id'])
    op.create_unique_constraint(None, 'biography_translation', ['id'])
    op.create_unique_constraint(None, 'comment', ['id'])
    op.create_unique_constraint(None, 'image', ['id'])
    op.create_unique_constraint(None, 'image_meta', ['id'])
    op.create_unique_constraint(None, 'partition', ['id'])
    op.create_unique_constraint(None, 'partition_meta', ['id'])
    op.create_unique_constraint(None, 'subtitle', ['id'])
    op.create_unique_constraint(None, 'tag', ['id'])
    op.create_unique_constraint(None, 'timecode', ['id'])
    op.create_unique_constraint(None, 'video', ['id'])
    op.create_unique_constraint(None, 'video_meta', ['id'])
    op.create_unique_constraint(None, 'work_analysis', ['id'])
    op.create_unique_constraint(None, 'work_analysis_meta', ['id'])
    op.create_unique_constraint(None, 'work_analysis_translation', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'work_analysis_translation', type_='unique')
    op.drop_constraint(None, 'work_analysis_meta', type_='unique')
    op.drop_constraint(None, 'work_analysis', type_='unique')
    op.drop_constraint(None, 'video_meta', type_='unique')
    op.drop_constraint(None, 'video', type_='unique')
    op.drop_constraint(None, 'timecode', type_='unique')
    op.drop_constraint(None, 'tag', type_='unique')
    op.drop_constraint(None, 'subtitle', type_='unique')
    op.drop_constraint(None, 'partition_meta', type_='unique')
    op.drop_constraint(None, 'partition', type_='unique')
    op.drop_constraint(None, 'image_meta', type_='unique')
    op.drop_constraint(None, 'image', type_='unique')
    op.drop_constraint(None, 'comment', type_='unique')
    op.drop_constraint(None, 'biography_translation', type_='unique')
    op.drop_constraint(None, 'biography_meta', type_='unique')
    op.drop_constraint(None, 'biography', type_='unique')
    op.drop_constraint(None, 'annotation', type_='unique')
    op.drop_table('masterclass_video')
    op.drop_table('masterclass_user')
    op.drop_table('masterclass_tag')
    op.drop_table('masterclass_image')
    op.drop_table('masterclass_comment')
    op.drop_table('masterclass')
    # ### end Alembic commands ###